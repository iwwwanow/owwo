name: Deploy

on:
  workflow_dispatch:
  push:
    branches: [master]
  pull_request:
    types:
      - closed
    branches:
      - master

permissions:
  contents: read
  packages: write

jobs:
  # TODO devide
  build-and-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build and push site docker image
        env:
          REPOSITORY: ${{ github.repository }}
          REPOSITORY_OWNER: ${{ github.repository_owner }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo $GITHUB_TOKEN | docker login ghcr.io -u $REPOSITORY_OWNER --password-stdin

          REPOSITORY_LOWER=$(echo "$REPOSITORY" | tr '[:upper:]' '[:lower:]')
          image_name_latest=ghcr.io/$REPOSITORY_LOWER:latest
          image_name=ghcr.io/$REPOSITORY_LOWER:$(git rev-parse --short HEAD)-$(date +%s)

          docker build --no-cache -t $image_name -t $image_name_latest --quiet .

          docker push $image_name --quiet
          docker push $image_name_latest --quiet

  # TODO reusable infra workflow/action
  deploy:
    runs-on: ubuntu-latest
    needs: build-and-publish
    environment: infrastructure
    steps:
      - name: Connect, pull from repo and restart docker
        uses: appleboy/ssh-action@v1.2.2
        env:
          REPOSITORY: ${{ github.repository }}
          REPOSITORY_OWNER: ${{ github.repository_owner }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          envs: REPOSITORY_OWNER,REPOSITORY,GITHUB_TOKEN
          script: |
            echo $GITHUB_TOKEN | docker login ghcr.io -u $REPOSITORY_OWNER --password-stdin
            docker compose down

            NGINX_IMAGE_NAME="ghcr.io/iwwwanow/nginx"
            OWWO_IMAGE_NAME="ghcr.io/iwwwanow/owwo"

            docker rm -f $NGINX_IMAGE_NAME:latest || true
            docker rm -f $OWWO_IMAGE_NAME:latest || true
            docker image rm -f $NGINX_IMAGE_NAME:latest || true
            docker image rm -f $OWWO_IMAGE_NAME:latest || true
            docker image prune -f

            docker rm -f $(docker ps -aq) 2>/dev/null
            docker compose pull
            docker-compose up -d
